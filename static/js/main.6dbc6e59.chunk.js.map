{"version":3,"sources":["components/chat/Chat.js","components/login/LoginModal.js","components/board/Board.js","components/dashboard/Dashboard.js","components/app/App.js","index.js"],"names":["socket","Chat","React","createContext","props","componentWillMount","socketIOClient","on","msg","console","log","setState","displayData","state","time","username","text","giveId","pre","Date","getTime","componentWillUnmount","message","id","handleChange","e","target","value","handleKeyPress","key","getUsername","emit","handleClick","count","className","this","type","placeholder","onChange","onKeyPress","Component","Modal","handleClose","modalType","submitRegister","submitLogin","show","children","showHideClassName","makeTitle","chooseSubmit","onClick","Board","canvasRef","useRef","colorsRef","socketRef","useEffect","canvas","current","test","context","getContext","colors","document","getElementsByClassName","color","onColorUpdate","split","i","length","addEventListener","drawing","drawLine","x0","y0","x1","y1","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","w","width","h","height","onMouseDown","canvasBounds","getBoundingClientRect","x","clientX","touches","left","y","clientY","top","onMouseMove","offsetX","offsetY","onMouseUp","throttle","callback","delay","previousCall","apply","arguments","onResize","window","data","ref","Dashboard","showModalLogin","showModalRegister","hideModal","handleSubmitLogin","preventDefault","user","password","axios","post","then","res","token","jwt_decode","setToken","setUsername","catch","err","response","handleSubmitRegister","onEnter","handleUsernameChange","handlePasswordChange","showLoginAndRegister","getTokenStatus","logout","deleteToken","currentUsername","currentUserId","node","App","name","jwt","tokenStatus","getToken","redirectTo","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6dbc6e59.chunk.js","sourcesContent":["import React, {Component, Context } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport {ScrollBox, FastTrack} from 'react-scroll-box'; \r\nimport './Chat.css';\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:3001\";\r\nvar socket;\r\nexport const MyContext = React.createContext();\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        displayData: [],\r\n        message: \"\",\r\n        id: 0,\r\n        count: 0\r\n    };\r\n  }\r\n  \r\n  // when the chat component mounts it will connect to socket.io, after it will emit a connection message and the message\r\n  // will be sent to the chat list. \r\n\r\n  componentWillMount = () => {\r\n\r\n    socket = socketIOClient(ENDPOINT);\r\n\r\n    socket.on(\"connected\", (msg) => {\r\n      console.log(\"Connecting...\");\r\n      this.setState({displayData : [...this.state.displayData, <div>{msg.time + \" - \" + msg.username + \": \" + msg.text + \" \"}</div>]})\r\n    })\r\n    socket.on(\"chat message\", msg => {    \r\n      console.log(\"adding message: \" + msg);\r\n      this.setState({displayData : [...this.state.displayData, <div>{msg.time + \" - \" + msg.username + \": \" + msg.text + \" \"}</div>]})\r\n      console.log(...this.state.displayData);\r\n    }); \r\n    socket.on(\"No login\", msg => {    \r\n      console.log(\"adding message: \" + msg);\r\n      this.setState({displayData : [...this.state.displayData, <div>{msg.time + \" - \" + msg.username + \": \" + msg.text + \" \"}</div>]})     \r\n      console.log(...this.state.displayData);\r\n    }); \r\n  }\r\n\r\n  giveId = (pre) => {\r\n    return `${ pre }_${ new Date().getTime() }`;\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.setState({displayData: []});\r\n    this.setState({message: \"\"});\r\n    this.setState({id: 0});\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ message: e.target.value });\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === \"Enter\") {\r\n      if(this.props.getUsername == \"\"){\r\n        socket.emit(\"chat message\", this.state.message, \"\");\r\n        this.setState({message: \"\"});\r\n      }\r\n      else{\r\n        socket.emit(\"chat message\", this.state.message, this.props.getUsername);\r\n        this.setState({message: \"\"});\r\n      }\r\n    }\r\n  }\r\n\r\n  handleClick = e => {   \r\n    if(this.props.getUsername == \"\"){\r\n      socket.emit(\"chat message\", this.state.message, \"\");\r\n      this.setState({message: \"\"});\r\n    }\r\n    else{\r\n      socket.emit(\"chat message\", this.state.message, this.props.getUsername);\r\n      this.setState({message: \"\"});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"chatBox-container\">\r\n      <div className=\"chatBox\">  \r\n        {this.state.displayData}        \r\n      </div>    \r\n      <div className=\"chatInputBox\">\r\n        <input\r\n            className=\"chatInput\"\r\n            type=\"text\"\r\n            placeholder=\"Type here\" \r\n            value={this.state.message}\r\n            onChange={this.handleChange}\r\n            onKeyPress={this.handleKeyPress}\r\n        />\r\n      </div>  \r\n    </div>\r\n    \r\n    )\r\n  }\r\n}\r\n  \r\nexport default Chat;","import React from \"react\";\r\nimport \"./LoginModal.css\";\r\n\r\nconst Modal = ({ handleClose, modalType, submitRegister, submitLogin, show, children }) => {\r\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n  const makeTitle = modalType ? \"Login\" : \"Register\";\r\n  const chooseSubmit = modalType ? submitLogin : submitRegister;\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n        <h1> {makeTitle} </h1>\r\n        <span className=\"close\" onClick={handleClose}> &times; </span>\r\n        {children}\r\n        <button className=\"modal-submit\"  onClick={chooseSubmit}>submit</button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport './Board.css';\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:3001\";\r\n\r\nconst Board = () => {\r\n  const canvasRef = useRef(null);\r\n  const colorsRef = useRef(null);\r\n  const socketRef = useRef();\r\n\r\n  const draw = ctx => {\r\n    ctx.fillStyle = '#000000'\r\n    ctx.beginPath()\r\n    ctx.arc(50, 100, 20, 0, 2*Math.PI)\r\n    ctx.fill()\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    // --------------- getContext() method returns a drawing context on the canvas-----\r\n\r\n    const canvas = canvasRef.current;\r\n    const test = colorsRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // ----------------------- Colors --------------------------------------------------\r\n\r\n    const colors = document.getElementsByClassName('color');\r\n    console.log(colors, 'the colors');\r\n    console.log(test);\r\n    // set the current color\r\n    const current = {\r\n      color: 'black',\r\n    };\r\n\r\n    // helper that will update the current color\r\n    const onColorUpdate = (e) => {\r\n      current.color = e.target.className.split(' ')[1];\r\n    };\r\n\r\n    // loop through the color elements and add the click event listeners\r\n    for (let i = 0; i < colors.length; i++) {\r\n      colors[i].addEventListener('click', onColorUpdate, false);\r\n    }\r\n    let drawing = false;\r\n\r\n    // ------------------------------- create the drawing ----------------------------\r\n\r\n    const drawLine = (x0, y0, x1, y1, color, emit) => {\r\n      context.beginPath();\r\n      context.moveTo(x0, y0);\r\n      context.lineTo(x1, y1);\r\n      context.strokeStyle = color;\r\n      context.lineWidth = 2;\r\n      context.stroke();\r\n      context.closePath();\r\n\r\n      if (!emit) { return; }\r\n      const w = canvas.width;\r\n      const h = canvas.height;\r\n\r\n      socketRef.current.emit('drawing', {\r\n        x0: x0 / w,\r\n        y0: y0 / h,\r\n        x1: x1 / w,\r\n        y1: y1 / h,\r\n        color,\r\n      });\r\n    };\r\n\r\n    // ---------------- mouse movement --------------------------------------\r\n\r\n    const onMouseDown = (e) => {\r\n      drawing = true;\r\n      canvas.canvasBounds = canvas.getBoundingClientRect();\r\n      current.x = (e.clientX || e.touches[0].clientX) - canvas.canvasBounds.left;\r\n      current.y = (e.clientY || e.touches[0].clientY) - canvas.canvasBounds.top;\r\n      // let offsetX = canvasBounds.left;\r\n      // let offsetY = canvasBounds.top;\r\n      // console.log(\"mouse down\");\r\n      // current.x = (e.clientX || e.touches[0].clientX) - offsetX;\r\n      // current.y = (e.clientY || e.touches[0].clientY) - offsetY;\r\n    };\r\n\r\n    const onMouseMove = (e) => {\r\n      if (!drawing) { return; }\r\n      let offsetX = canvas.canvasBounds.left;\r\n      let offsetY = canvas.canvasBounds.top;\r\n      drawLine(current.x, current.y, (e.clientX || e.touches[0].clientX) - offsetX, (e.clientY || e.touches[0].clientY) - offsetY, current.color, true);\r\n      current.x = (e.clientX || e.touches[0].clientX) - offsetX;\r\n      current.y = (e.clientY || e.touches[0].clientY) - offsetY;\r\n    };\r\n\r\n    const onMouseUp = (e) => {\r\n      if (!drawing) { return; }\r\n      drawing = false;\r\n       let offsetX = canvas.canvasBounds.left;\r\n      let offsetY = canvas.canvasBounds.top;\r\n      drawLine(current.x, current.y, (e.clientX || e.touches[0].clientX) - offsetX, (e.clientY || e.touches[0].clientY) - offsetY, current.color, true);\r\n    };\r\n\r\n    // ----------- limit the number of events per second -----------------------\r\n\r\n    const throttle = (callback, delay) => {\r\n      let previousCall = new Date().getTime();\r\n      return function() {\r\n        const time = new Date().getTime();\r\n\r\n        if ((time - previousCall) >= delay) {\r\n          previousCall = time;\r\n          callback.apply(null, arguments);\r\n        }\r\n      };\r\n    };\r\n\r\n    // -----------------add event listeners to our canvas ----------------------\r\n\r\n    canvas.addEventListener('mousedown', onMouseDown, false);\r\n    canvas.addEventListener('mouseup', onMouseUp, false);\r\n    canvas.addEventListener('mouseout', onMouseUp, false);\r\n    canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false);\r\n\r\n    // Touch support for mobile devices\r\n    canvas.addEventListener('touchstart', onMouseDown, false);\r\n    canvas.addEventListener('touchend', onMouseUp, false);\r\n    canvas.addEventListener('touchcancel', onMouseUp, false);\r\n    canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false);\r\n\r\n    // -------------- make the canvas fill its parent component -----------------\r\n\r\n    const onResize = () => {\r\n      let {width, height} = canvas.getBoundingClientRect();\r\n      if(canvas.width !== width || canvas.height !== height){\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n      }\r\n      /*\r\n      let scaleX = window.innerWidth / canvas.width;\r\n      let scaleY = window.innerWidth / canvas.height;\r\n      let scaleToFit = Math.min(scaleX, scaleY);\r\n      let scaleToCover = Math.max(scaleX, scaleY);\r\n\r\n      canvas.style.transformOrigin = '0 0'; // scale from top left\r\n      canvas.style.transform = 'scale(' + scaleToFit + ')';\r\n      */\r\n    };\r\n\r\n    window.addEventListener('resize', onResize, false);\r\n    onResize();\r\n\r\n    // ----------------------- socket.io connection ----------------------------\r\n    const onDrawingEvent = (data) => {\r\n      const w = canvas.width;\r\n      const h = canvas.height;\r\n      drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color);\r\n    }\r\n\r\n    socketRef.current = socketIOClient(ENDPOINT);\r\n    socketRef.current.on('drawing', onDrawingEvent);\r\n  }, []);\r\n\r\n  // ------------- The Canvas and color elements --------------------------\r\n\r\n  return (\r\n    <div className=\"drawing-container\">\r\n      <canvas ref={canvasRef} className=\"canvas\" />\r\n      <section ref={colorsRef} className=\"colors\">\r\n        <div className=\"color black\" />\r\n        <div className=\"color red\" />\r\n        <div className=\"color green\" />\r\n        <div className=\"color blue\" />\r\n        <div className=\"color yellow\" />\r\n        <div className=\"color purple\"/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../login/LoginModal.js\";\r\nimport \"./Dashboard.css\";\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport Chat from \"../chat/Chat.js\";\r\nimport Board from \"../board/Board\";\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUsername: \"\",\r\n      currentUserId: \"\",\r\n      show: false,\r\n      modalType: true,\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n \r\n  showModalLogin = () => {\r\n    this.setState({\r\n      show: true,\r\n      modalType: true\r\n    });\r\n  };\r\n\r\n  showModalRegister = () => {\r\n    this.setState({\r\n      show: true,\r\n      modalType: false\r\n    });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleSubmitLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    \r\n    axios.post(`http://localhost:3001/api/users/login`, user)\r\n      .then(res => {\r\n        console.log(\"login response: \");\r\n        console.log(res.data.token);\r\n        console.log(jwt_decode(res.data.token).username);\r\n        this.props.setToken(res.data.token);\r\n        this.props.setUsername(jwt_decode(res.data.token).username);\r\n        console.log(\"almost connected\");    \r\n        this.setState({show: false});\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response)\r\n      });\r\n  }\r\n\r\n  handleSubmitRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    console.log(user.username);\r\n    console.log(user.password);\r\n\r\n    axios.post(`http://localhost:3001/api/users/register`, user)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        this.setState({show: false});\r\n        axios.post(`http://localhost:3001/api/users/login`, user)\r\n        .then(res => {\r\n          console.log(\"login response: \");\r\n          console.log(res.data.token);\r\n          console.log(jwt_decode(res.data.token).username);\r\n          this.props.setToken(res.data.token);\r\n          this.props.setUsername(jwt_decode(res.data.token).username);\r\n          console.log(\"almost connected\");    \r\n          this.setState({show: false});\r\n        })\r\n        .catch(err => {\r\n          console.log(err.response)\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response)\r\n      });\r\n  }\r\n\r\n  onEnter = (e) => {\r\n    if (e.key === \"Enter\"){\r\n      if(this.state.modalType === true){\r\n        this.handleSubmitLogin(e)\r\n      }\r\n      else{\r\n        this.handleSubmitRegister(e)\r\n      }\r\n    } \r\n  }\r\n\r\n  handleUsernameChange = e => {\r\n    this.setState({ username: e.target.value });\r\n  };\r\n\r\n  handlePasswordChange = e => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  showLoginAndRegister = () => {\r\n    console.log(\"token: \" + this.props.getTokenStatus());    \r\n  } \r\n\r\n  logout = () => {\r\n    this.props.deleteToken();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Modal \r\n          ref={node => this.node = node}\r\n          show={this.state.show}\r\n          submitRegister={this.handleSubmitRegister}\r\n          submitLogin={this.handleSubmitLogin}\r\n          onEnter={this.onEnter}\r\n          modalType={this.state.modalType}\r\n          handleClose={this.hideModal}\r\n        >\r\n          <input\r\n            className=\"input-username\"\r\n            type=\"text\"\r\n            value={this.username}\r\n            onChange={this.handleUsernameChange}\r\n            onKeyPress={this.onEnter}\r\n          />\r\n          <input\r\n            className=\"input-password\"\r\n            type=\"text\"\r\n            value={this.state.password}\r\n            onChange={this.handlePasswordChange}\r\n            onKeyPress={this.onEnter}\r\n          />\r\n        </Modal>\r\n      \r\n        \r\n          {this.props.getTokenStatus() ?\r\n          <div>\r\n            <div className=\"username\">{this.props.getUsername()}</div>\r\n            <div className=\"logout\" onClick={this.logout}>Logout</div>\r\n          </div>\r\n          :\r\n          <div>\r\n          <button\r\n            className=\"button-login\"\r\n            type=\"button\"\r\n            onClick={() => this.showModalLogin()}\r\n          >\r\n          Login\r\n          </button>\r\n          \r\n          <button\r\n            className=\"button-register\"\r\n            type=\"button\"\r\n            onClick={() => this.showModalRegister()}\r\n          >\r\n          Register\r\n          </button>\r\n          </div>\r\n          \r\n          }\r\n\r\n          <Board/>\r\n          <Chat getUsername={this.props.getUsername()} />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport \"./App.css\";\r\nimport Chat from \"../chat/Chat.js\";\r\nimport Title from \"../title/Title.js\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\n\r\nexport default class App extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      redirectTo: \"/Dashboard\",\r\n      token: \"\",\r\n      tokenStatus: false\r\n    };\r\n  }\r\n\r\n  setUsername = (name) => {\r\n    this.setState({username: name});\r\n  }\r\n\r\n  getUsername = () => {\r\n    return this.state.username\r\n  }\r\n  setToken = (jwt) => {\r\n    this.setState({token: jwt, tokenStatus: true});\r\n    console.log(\"jwt: \" + this.state.token);\r\n  }\r\n\r\n  getToken = () => {\r\n    return this.state.token;\r\n  }\r\n  getTokenStatus = () => {\r\n    return this.state.tokenStatus;\r\n  }\r\n  deleteToken = () => {\r\n    this.setState({token: \"\", tokenStatus: false});\r\n    console.log(\"loggin out\");\r\n  }\r\n\r\n    //TODO implement React Router or pass down components to children to swtich pages\r\n  render(){\r\n    return (\r\n      <div className=\"App\" id=\"darkmode\">\r\n        <h1 className=\"Title\">Chat</h1>\r\n\r\n        <Dashboard setUsername={this.setUsername} getUsername={this.getUsername} \r\n                   setToken={this.setToken} getToken={this.getToken} getTokenStatus={this.getTokenStatus}\r\n                   deleteToken={this.deleteToken}/>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}